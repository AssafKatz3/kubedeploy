---
helmDefaults:
  atomic: true
  wait: true
  createNamespace: true

environments:
  default:
    values:
      - common-values.yaml
---
templates:
  default: &default
    namespace: netpolicy
    chart: ../{{ requiredEnv "CHART_NAME" }}
    installed: true
    valuesTemplate:
      - fullnameOverride: '{{`{{ .Release.Name }}`}}'
      - deploymentMode: Deployment
      - image:
          repository: nginx
          tag: latest


releases:
  - name: {{requiredEnv "RELEASE_NAME"}}
    labels:
      test: netpolicy
    <<: *default
    values:
      - networkPolicy:
          enabled: true
          ingress:
            - from:
                - ipBlock:
                    cidr: 172.17.0.0/16
                    except:
                      - 172.17.1.0/24
                - namespaceSelector:
                    matchLabels:
                      project: myproject
                - podSelector:
                    matchLabels:
                      role: frontend
              ports:
                - protocol: TCP
                  port: 6379
          egress:
            - to:
                - ipBlock:
                    cidr: 10.0.0.0/24
              ports:
                - protocol: TCP
                  port: 5978

  # headless service test
  - name: {{requiredEnv "RELEASE_NAME"}}-headless-svc
    labels:
      test: netpolicy
    <<: *default
    values:
      - service:
          headless: true

  # service with container ports
  - name: {{requiredEnv "RELEASE_NAME"}}-containerport-svc
    labels:
      test: netpolicy
    <<: *default
    values:
      - ports:
          - containerPort: 80
            name: http
            protocol: TCP

  # net-policy with ingress and monitoring
  - name: {{requiredEnv "RELEASE_NAME"}}-withingress
    labels:
      test: netpolicy-ingress
    <<: *default
    values:
      - ingress:
          enabled: true
          hosts:
            - host: chart-example.local
      - monitoring:
          enabled: true
      - ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: metrics
          containerPort: 9000
          protocol: TCP
      - networkPolicy:
          enabled: true
          ingress:
            - from:
                - ipBlock:
                    cidr: 172.17.0.0/16
                    except:
                      - 172.17.1.0/24
                - namespaceSelector:
                    matchLabels:
                      project: myproject
                - podSelector:
                    matchLabels:
                      role: frontend
              ports:
                - protocol: TCP
                  port: 6379
          egress:
            - to:
                - ipBlock:
                    cidr: 10.0.0.0/24
              ports:
                - protocol: TCP
                  port: 5978
