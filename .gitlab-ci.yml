---
include:
  - project: helm/charts
    file: '/ci-template/.gitlab-ci.yml'

helmfile_output_lint:
  extends: .runner
  stage: lint
  script:
    - helmfile template -f deploy-tests/lint-test.yaml > helmfile-output.yaml
    - yamllint helmfile-output.yaml
  allow_failure:
    exit_codes: 2
  artifacts:
    when: on_failure
    paths:
      - helmfile-output.yaml
    expire_in: 1 week

helm_unittests:
  tags:
    - docker-runner
  image: sysbee/kubeci:latest
  stage: tests
  before_script:
    - helm plugin install https://github.com/helm-unittest/helm-unittest.git
  script:
    - helm unittest --color ${CHART_NAME}/

.deploy:
  extends: .runner
  stage: deploy
  before_script:
    - kind export kubeconfig --name ${CI_COMMIT_SHORT_SHA}

.deploychart:
  script:
    - echo "skipped"

deploy_tests:
  extends: .deploy
  parallel:
    matrix:
      - TESTS:
          - deployment
          - statefulset
          - network
          - job
          - cronjob
  script:
    - helmfile apply --file deploy-tests/${TESTS}.yaml

verify:
  extends: .runner
  stage: verify
  script:
    - kind export kubeconfig --name ${CI_COMMIT_SHORT_SHA}
    - kubectl wait --for=condition=available --timeout=300s -n deployment deployment/${RELEASE_NAME}
    - kubectl get deployment ${RELEASE_NAME} -n deployment -o=jsonpath='{.status.replicas}' |grep 1

public-release:
  tags:
    - docker-runner
  image: sysbee/kubeci:latest
  extends: .runner
  stage: publish
  before_script:
    - helm plugin install https://github.com/hypnoglow/helm-s3.git
    - helm repo add sysbee s3://${S3_BUCKET}/release/sysbee
    - helm repo update
  script:
    - helm package ${CHART_NAME}
    - helm s3 push --force --relative *.tgz sysbee
  only:
    variables:
      - $PUBLIC_CHART == "true"
      - $CI_COMMIT_REF_NAME =~ /^release\/.*$/
