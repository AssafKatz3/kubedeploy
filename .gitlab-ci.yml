---
include:
  - project: helm/charts
    file: '/ci-template/.gitlab-ci.yml'

deploychart:
  extends: .runner
  stage: deploy
  script:
    - kind export kubeconfig --name ${CI_COMMIT_SHORT_SHA}
    - helm upgrade --install ${RELEASE_NAME}-deployment ${CHART_NAME} --set deploymentMode=Deployment --set image.repository=nginx --set image.tag=1.16.0 --wait --timeout 300s
    - helm upgrade --install ${RELEASE_NAME}-job ${CHART_NAME} --set deploymentMode=Job --set image.repository=nginx --set image.tag=1.16.0 --wait --timeout 300s
    - helm upgrade --install ${RELEASE_NAME}-statefulset ${CHART_NAME} --set deploymentMode=Statefulset --set image.repository=nginx --set image.tag=1.16.0 --set persistency.enabled=true --wait --timeout 300s
    - helm upgrade --install ${RELEASE_NAME}-multi-container-deployment ${CHART_NAME} --set deploymentMode=Deployment --set additionalContainers.enabled=true --set initContainers.enabled.true --set image.repository=nginx --set image.tag=1.16.0 --wait --timeout 300s

verify:
  extends: .runner
  stage: verify
  script:
    - kind export kubeconfig --name ${CI_COMMIT_SHORT_SHA}
    - kubectl wait --for=condition=available --timeout=300s deployment/${RELEASE_NAME}-deployment-${CHART_NAME}
    - kubectl get deployment ${RELEASE_NAME}-deployment-${CHART_NAME} -n default -o=jsonpath='{.status.replicas}' |grep 1

publish_docs:
  stage: publish
  tags:
    - docker-runner
  image:
    name: pandoc/core
    entrypoint: ["/bin/sh", "-c"]
  extends: .runner
  before_script:
    - apk add aws-cli
  script:
    - pandoc -t html5 -f markdown -s --toc --toc-depth 2 --template pandoc/github.html5 --css pandoc/github.css kubedeploy/README.md -o index.html
    - aws s3 cp index.html s3://${S3_BUCKET}/${CHART_NAME}/index.html
  only:
    refs:
      - main
      - tags
    variables:
      - $PUBLIC_CHART == "true"
